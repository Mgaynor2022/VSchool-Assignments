{"ast":null,"code":"var _jsxFileName = \"/Users/mikeg/Developer/Assignments/level 4/cssGradientGenerator/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GGT from \"./GGT\";\n\n// For this project we need to use linear-gradient() CSS function \n// creates an image consisting of a progressive transition between two or more colors along a straight line.\n\n// Have a component that has 2 or 3 inputs and a number input to represent the angle. This will be like a form \n\n// Have a component that previews that displays the current gradient\n\n// Generate cross-browser CSS code in a text box using <textarea>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  /// This is to display the current gradient.\n\n  const [formData, setFormData] = useState(\"linear-gradient(50deg, #FFFF00 , #000000)\");\n\n  // This is to save the the users input gradient data.\n  const [gradient, setGradient] = useState({\n    color1: \"\",\n    color2: \"\",\n    angle: \"\"\n  });\n\n  // Making template for cross browser CSS Code\n  const [generatedCss, SetGeneratesCss] = useState(`background: linear-gradient(50deg, #FFFF00 , #000000); \n        -moz-background: linear-gradient(50deg, #FFFF00 , #000000); \n        -webkit: linear-gradient(50deg, #FFFF00 , #000000)`);\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setGradient(prevGradient => {\n      return {\n        ...prevGradient,\n        [name]: value\n      };\n    });\n  }\n\n  // function textGradient() {\n  //     \"linear-gradient(formData.color1.value + \",\" + formData.color2.value)\"\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color1\",\n          value: gradient.color1,\n          type: \"text\",\n          placeholder: \"Color 1\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color2\",\n          value: gradient.color2,\n          type: \"text\",\n          placeholder: \"Color 2\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"angle\",\n          value: gradient.angle,\n          type: \"number\",\n          placeholder: \"Place Angle Number\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: formData,\n            height: 300,\n            width: 300\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          \"readOnly-value\": ge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NUFsfhUo+UH3v7ZVj6vkf22r154=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GGT","App","formData","setFormData","gradient","setGradient","color1","color2","angle","generatedCss","SetGeneratesCss","handleChange","event","name","value","target","prevGradient","background","height","width","ge"],"sources":["/Users/mikeg/Developer/Assignments/level 4/cssGradientGenerator/my-app/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport GGT from \"./GGT\"\n\n\n// For this project we need to use linear-gradient() CSS function \n// creates an image consisting of a progressive transition between two or more colors along a straight line.\n\n// Have a component that has 2 or 3 inputs and a number input to represent the angle. This will be like a form \n\n// Have a component that previews that displays the current gradient\n\n// Generate cross-browser CSS code in a text box using <textarea>\n\nexport default function App() {\n    /// This is to display the current gradient.\n\n    const[formData, setFormData] = useState(\n        \"linear-gradient(50deg, #FFFF00 , #000000)\"\n        )\n\n    // This is to save the the users input gradient data.\n    const[gradient,setGradient] = useState({\n        color1:\"\",\n        color2:\"\",\n        angle:\"\"\n\n    })\n\n    // Making template for cross browser CSS Code\n    const[generatedCss,SetGeneratesCss] = useState(\n        `background: linear-gradient(50deg, #FFFF00 , #000000); \n        -moz-background: linear-gradient(50deg, #FFFF00 , #000000); \n        -webkit: linear-gradient(50deg, #FFFF00 , #000000)`\n    )\n\n    function handleChange(event) {\n        const{name,value} = event.target\n        setGradient(prevGradient => {\n            return {\n                ...prevGradient,\n                [name]:value\n            }\n        })\n    }\n    \n\n    // function textGradient() {\n    //     \"linear-gradient(formData.color1.value + \",\" + formData.color2.value)\"\n    // }\n    return (\n        <div>\n            <GGT>\n                <form>\n                    <input name=\"color1\" value={gradient.color1} type=\"text\" placeholder=\"Color 1\" onChange={handleChange}></input>\n                    <input name=\"color2\" value={gradient.color2} type=\"text\" placeholder=\"Color 2\" onChange={handleChange}></input>\n                    <input name=\"angle\" value={gradient.angle} type=\"number\" placeholder=\"Place Angle Number\" onChange={handleChange}></input>\n                </form>\n            </GGT>\n\n            <GGT>\n                <div>\n                    <div style={{background: formData, height:300, width:300}}>\n                       \n                    </div>\n                </div>\n            </GGT>\n\n            <GGT>\n                <form>\n                    <textarea readOnly-value={ge}>\n                        {/* {textGradient} */}\n                    </textarea>\n                </form>\n            </GGT>\n\n        </div>\n        \n        \n\n       \n    )\n    \n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,GAAG,MAAM,OAAO;;AAGvB;AACA;;AAEA;;AAEA;;AAEA;AAAA;AAEA,eAAe,SAASC,GAAG,GAAG;EAAA;EAC1B;;EAEA,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CACnC,2CAA2C,CAC1C;;EAEL;EACA,MAAK,CAACK,QAAQ,EAACC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACnCO,MAAM,EAAC,EAAE;IACTC,MAAM,EAAC,EAAE;IACTC,KAAK,EAAC;EAEV,CAAC,CAAC;;EAEF;EACA,MAAK,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGX,QAAQ,CACzC;AACT;AACA,2DAA2D,CACtD;EAED,SAASY,YAAY,CAACC,KAAK,EAAE;IACzB,MAAK;MAACC,IAAI;MAACC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAChCV,WAAW,CAACW,YAAY,IAAI;MACxB,OAAO;QACH,GAAGA,YAAY;QACf,CAACH,IAAI,GAAEC;MACX,CAAC;IACL,CAAC,CAAC;EACN;;EAGA;EACA;EACA;EACA,oBACI;IAAA,wBACI,QAAC,GAAG;MAAA,uBACA;QAAA,wBACI;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAEV,QAAQ,CAACE,MAAO;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,SAAS;UAAC,QAAQ,EAAEK;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/G;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAEP,QAAQ,CAACG,MAAO;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,SAAS;UAAC,QAAQ,EAAEI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/G;UAAO,IAAI,EAAC,OAAO;UAAC,KAAK,EAAEP,QAAQ,CAACI,KAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,oBAAoB;UAAC,QAAQ,EAAEG;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACvH;MAAA;MAAA;MAAA;IAAA,QACL,eAEN,QAAC,GAAG;MAAA,uBACA;QAAA,uBACI;UAAK,KAAK,EAAE;YAACM,UAAU,EAAEf,QAAQ;YAAEgB,MAAM,EAAC,GAAG;YAAEC,KAAK,EAAC;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA;MAEpD;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ,eAEN,QAAC,GAAG;MAAA,uBACA;QAAA,uBACI;UAAU,kBAAgBC;QAAG;UAAA;UAAA;UAAA;QAAA;MAElB;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAOd;AAAC,GArEuBnB,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}