{"ast":null,"code":"var _jsxFileName = \"/Users/mikeg/Developer/Assignments/level 4/cssGradientGenerator/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GGT from \"./GGT\";\n\n// For this project we need to use linear-gradient() CSS function \n// creates an image consisting of a progressive transition between two or more colors along a straight line.\n\n// Have a component that has 2 or 3 inputs and a number input to represent the angle. This will be like a form \n\n// Have a component that previews that displays the current gradient\n\n// Generate cross-browser CSS code in a text box using <textarea>\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [formData, setFormData] = useState(linear - gradient(red, blue));\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevData => {\n      return {\n        ...prevData,\n        [name]: value\n      };\n    });\n  }\n\n  // function textGradient() {\n  //     \"linear-gradient(formData.color1.value + \",\" + formData.color2.value)\"\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color1\",\n          value: formData.color1,\n          type: \"text\",\n          placeholder: \"Color 1\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"color2\",\n          value: formData.color2,\n          type: \"text\",\n          placeholder: \"Color 2\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"angle\",\n          value: formData.angle,\n          type: \"number\",\n          placeholder: \"Place Angle Number\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: {\n            formData\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GGT, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RWWwNTd+lJ4tTXFtguDJNIV6nns=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GGT","App","formData","setFormData","linear","gradient","red","blue","handleChange","event","name","value","target","prevData","color1","color2","angle","backgroundImage"],"sources":["/Users/mikeg/Developer/Assignments/level 4/cssGradientGenerator/my-app/src/App.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport GGT from \"./GGT\"\n\n\n// For this project we need to use linear-gradient() CSS function \n// creates an image consisting of a progressive transition between two or more colors along a straight line.\n\n// Have a component that has 2 or 3 inputs and a number input to represent the angle. This will be like a form \n\n// Have a component that previews that displays the current gradient\n\n// Generate cross-browser CSS code in a text box using <textarea>\n\nexport default function App() {\n\n    const[formData, setFormData] = useState(linear-gradient(red,blue))\n\n    function handleChange(event) {\n        const{name,value} = event.target\n        setFormData(prevData => {\n            return {\n                ...prevData,\n                [name]:value\n            }\n        })\n    }\n\n    // function textGradient() {\n    //     \"linear-gradient(formData.color1.value + \",\" + formData.color2.value)\"\n    // }\n    return (\n        <div>\n            <GGT>\n                <form>\n                    <input name=\"color1\" value={formData.color1} type=\"text\" placeholder=\"Color 1\" onChange={handleChange}></input>\n                    <input name=\"color2\" value={formData.color2} type=\"text\" placeholder=\"Color 2\" onChange={handleChange}></input>\n                    <input name=\"angle\" value={formData.angle} type=\"number\" placeholder=\"Place Angle Number\" onChange={handleChange}></input>\n                </form>\n            </GGT>\n\n            <GGT>\n                <div style={{backgroundImage: {formData}}}>\n                </div>\n            </GGT>\n\n            <GGT>\n                <form>\n                    <textarea>\n                        {/* {textGradient} */}\n                    </textarea>\n                </form>\n            </GGT>\n\n        </div>\n        \n        \n\n       \n    )\n    \n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,GAAG,MAAM,OAAO;;AAGvB;AACA;;AAEA;;AAEA;;AAEA;AAAA;AAEA,eAAe,SAASC,GAAG,GAAG;EAAA;EAE1B,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAACK,MAAM,GAACC,QAAQ,CAACC,GAAG,EAACC,IAAI,CAAC,CAAC;EAElE,SAASC,YAAY,CAACC,KAAK,EAAE;IACzB,MAAK;MAACC,IAAI;MAACC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IAChCT,WAAW,CAACU,QAAQ,IAAI;MACpB,OAAO;QACH,GAAGA,QAAQ;QACX,CAACH,IAAI,GAAEC;MACX,CAAC;IACL,CAAC,CAAC;EACN;;EAEA;EACA;EACA;EACA,oBACI;IAAA,wBACI,QAAC,GAAG;MAAA,uBACA;QAAA,wBACI;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAET,QAAQ,CAACY,MAAO;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,SAAS;UAAC,QAAQ,EAAEN;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/G;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAEN,QAAQ,CAACa,MAAO;UAAC,IAAI,EAAC,MAAM;UAAC,WAAW,EAAC,SAAS;UAAC,QAAQ,EAAEP;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/G;UAAO,IAAI,EAAC,OAAO;UAAC,KAAK,EAAEN,QAAQ,CAACc,KAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,WAAW,EAAC,oBAAoB;UAAC,QAAQ,EAAER;QAAa;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACvH;MAAA;MAAA;MAAA;IAAA,QACL,eAEN,QAAC,GAAG;MAAA,uBACA;QAAK,KAAK,EAAE;UAACS,eAAe,EAAE;YAACf;UAAQ;QAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IACpC;MAAA;MAAA;MAAA;IAAA,QACJ,eAEN,QAAC,GAAG;MAAA,uBACA;QAAA,uBACI;UAAA;UAAA;UAAA;QAAA;MAEW;QAAA;QAAA;QAAA;MAAA;IACR;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAOd;AAAC,GA/CuBD,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}